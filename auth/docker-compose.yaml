services:
  postgresql:
    image: registry.smigula.io/docker/postgres:16-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .secrets.env
      - .env
    networks:
      - auth
  redis:
    image: registry.smigula.io/docker/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis-data:/data
    networks:
      - auth
  server:
    image: registry.smigula.io/ghcr/goauthentik/server:2025.6.3
    container_name: authentik-server
    restart: unless-stopped
    command: server
    env_file:
      - .secrets.env
      - .env
    volumes:
      - media-data:/media
      - templates-data:/templates
      - /run/user/1000/docker.sock:/var/run/docker.sock
    ports:
      - "${COMPOSE_PORT_HTTP:-9000}:9000"
      - "${COMPOSE_PORT_HTTPS:-9443}:9443"
    networks:
      - auth
    depends_on:
      - postgresql
      - redis
  worker:
    image: registry.smigula.io/ghcr/goauthentik/server:2025.6.3
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    env_file:
      - .secrets.env
      - .env
    volumes:
      - /run/user/1000/docker.sock:/var/run/docker.sock
      - media-data:/media
      - certs-data:/certs
      - templates-data:/templates
    networks:
      - auth
    depends_on:
      - postgresql
      - redis
volumes:
  postgres-data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data/postgres
      o: bind
  redis-data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data/redis
      o: bind
  media-data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data/authentik/media
      o: bind
  certs-data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data/authentik/certs
      o: bind
  templates-data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data/authentik/templates
      o: bind
networks:
  auth:
    external: true
  registry:
    external: true
  traefik:
    external: true
