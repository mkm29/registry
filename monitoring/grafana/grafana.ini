[server]
domain = grafana.smigula.io
root_url = https://grafana.smigula.io
serve_from_sub_path = true
protocol = http
enable_gzip = true

[security]
admin_user = mmurphy
# admin_password is set via environment variable
csrf_trusted_origins = https://grafana.smigula.io

[users]
allow_sign_up = false
allow_org_create = false

[auth]
disable_login_form = false
disable_signout_menu = false
oauth_allow_insecure_email_lookup = false

[auth.anonymous]
enabled = false
# org_role = Viewer

[auth.generic_oauth]
enabled = true
name = Authentik
icon = signin
client_id = ox6Hg9XVnTfjkImKEddCH4hQ0FrQCDpu6mxWibdZ
client_secret = P2fU48SIk0SBdIi2aaIVfu8W5GdF7xeNbsbYsK8s7RKdlQ9fADK1071AY0FAetpcv9yoWIHXfQnkY8FpxiOpOM9lf3ekSTI82hEkCVbMJhj3abGJ3iETdqhBcqRXnFwS
# client_secret is set via environment variable
scopes = openid email profile groups
empty_scopes = false
email_claim = email
login_claim = preferred_username
name_claim = name
auth_url = https://auth.smigula.io/application/o/authorize/
token_url = https://auth.smigula.io/application/o/token/
api_url = https://auth.smigula.io/application/o/userinfo/
signout_redirect_url = https://auth.smigula.io/application/o/grafana/end-session/
# Role mapping based on groups claim
role_attribute_strict = true
role_attribute_path = contains(groups[*], 'Grafana Admins') && 'GrafanaAdmin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'none'
groups_attribute_path = groups
# OAuth settings
allow_sign_up = true
auto_login = false
tls_skip_verify_insecure = false
use_pkce = true
use_refresh_token = true
# Disable proxy auth
[auth.proxy]
enabled = false

# GF_AUTH_OAUTH_AUTO_LOGIN
[auth.oauth]
auto_login = true